#+TITLE: tl

[[https://github.com/tldr-pages/tldr][tldr]] is nice but I wanted my own data.

Some tldr clients probably support custom data but I haven't researched it. This works well for me so I don't have any reason to change it now.

In the snippets below, replace <TL_PATH> with the path to this cloned repo.

We create an alias to be able to invoke tl from anywhere:
#+begin_src shell
alias tl='<TL_PATH>/src/tl'
#+end_src

The following shell function provides a nice integration with [[https://github.com/lotabout/skim][skim]]:
#+begin_src shell
t() {
    # Use the power of sk with tl
    # Use "ctrl-e" to edit an entry, RET to simply see it in full
    # /dev/tty trick: from https://github.com/junegunn/fzf/issues/1361
    ls -1 <TL_PATH>/pages/ | rev | cut -c 4- | rev | sk --preview "tl {}" --preview-window wrap --bind "enter:execute(tl {})+abort,ctrl-e:execute(tl {} e < /dev/tty)+abort"
}
#+end_src

And this zsh compsys script allows for handy autocompletion:
#+begin_src
#compdef _tl tl

_tl() {
    _arguments '1: :->cmdname' '2: :->edit'
    case $state in
    cmdname)
        # Match all files in <TL_PATH>/pages, but remove the .md, and then add a space
        _path_files -W <TL_PATH>/pages -g '*.md(:r)' -S ' '
    ;;
    edit)
        # Couldn't make it work in any simpler way...
        local -a subcmds
        subcmds=('edit:edit')
        _describe 'command' subcmds
    ;;
    esac
}
#+end_src
